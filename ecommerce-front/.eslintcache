[{"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\index.js":"1","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\App.js":"2","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\Routes.js":"3","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\user\\Signup.js":"4","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\user\\Signin.js":"5","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Home.js":"6","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Menu.js":"7","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Layout.js":"8","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\config.js":"9","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\auth\\index.js":"10","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\auth\\PrivateRoute.js":"11","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\user\\UserDashboard.js":"12","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\auth\\AdminRoute.js":"13","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\user\\AdminDashboard.js":"14","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\admin\\AddCategory.js":"15","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\admin\\apiAdmin.js":"16","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\admin\\AddProduct.js":"17","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\apiCore.js":"18","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Card.js":"19","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\ShowImage.js":"20","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Shop.js":"21","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Checkbox.js":"22","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\fixedPrices.js":"23","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\RadioBox.js":"24","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Search.js":"25","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Product.js":"26","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\cartHelpers.js":"27","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Cart.js":"28","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Checkout.js":"29","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\admin\\Orders.js":"30","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\user\\Profile.js":"31","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\user\\apiUser.js":"32","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\admin\\ManageProducts.js":"33","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\admin\\UpdateProduct.js":"34"},{"size":207,"mtime":1610910421116,"results":"35","hashOfConfig":"36"},{"size":108,"mtime":1610906563588,"results":"37","hashOfConfig":"36"},{"size":2012,"mtime":1611548505096,"results":"38","hashOfConfig":"36"},{"size":3276,"mtime":1610917245211,"results":"39","hashOfConfig":"36"},{"size":3443,"mtime":1610932798030,"results":"40","hashOfConfig":"36"},{"size":1782,"mtime":1611165257873,"results":"41","hashOfConfig":"36"},{"size":2882,"mtime":1611166216668,"results":"42","hashOfConfig":"36"},{"size":489,"mtime":1610995590375,"results":"43","hashOfConfig":"36"},{"size":49,"mtime":1610909832473,"results":"44","hashOfConfig":"36"},{"size":1774,"mtime":1610920156747,"results":"45","hashOfConfig":"36"},{"size":431,"mtime":1610937588076,"results":"46","hashOfConfig":"36"},{"size":3597,"mtime":1611546499722,"results":"47","hashOfConfig":"36"},{"size":464,"mtime":1610938978036,"results":"48","hashOfConfig":"36"},{"size":2110,"mtime":1611546371092,"results":"49","hashOfConfig":"36"},{"size":2436,"mtime":1610936362543,"results":"50","hashOfConfig":"36"},{"size":4022,"mtime":1611548062935,"results":"51","hashOfConfig":"36"},{"size":6107,"mtime":1610992026426,"results":"52","hashOfConfig":"36"},{"size":3375,"mtime":1611266757313,"results":"53","hashOfConfig":"36"},{"size":3814,"mtime":1611189862384,"results":"54","hashOfConfig":"36"},{"size":382,"mtime":1610994942938,"results":"55","hashOfConfig":"36"},{"size":4309,"mtime":1611184776620,"results":"56","hashOfConfig":"36"},{"size":1141,"mtime":1611006442962,"results":"57","hashOfConfig":"36"},{"size":522,"mtime":1611084262548,"results":"58","hashOfConfig":"36"},{"size":647,"mtime":1611085085390,"results":"59","hashOfConfig":"36"},{"size":3679,"mtime":1611197171188,"results":"60","hashOfConfig":"36"},{"size":2079,"mtime":1611162584787,"results":"61","hashOfConfig":"36"},{"size":2256,"mtime":1611253575561,"results":"62","hashOfConfig":"36"},{"size":1867,"mtime":1611188965124,"results":"63","hashOfConfig":"36"},{"size":6134,"mtime":1611328670758,"results":"64","hashOfConfig":"36"},{"size":5494,"mtime":1611531391402,"results":"65","hashOfConfig":"36"},{"size":3230,"mtime":1611544207951,"results":"66","hashOfConfig":"36"},{"size":1645,"mtime":1611544697789,"results":"67","hashOfConfig":"36"},{"size":2547,"mtime":1611548136782,"results":"68","hashOfConfig":"36"},{"size":7455,"mtime":1611550272503,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1r7ypck",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\index.js",[],["154","155"],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\App.js",[],["156","157"],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\Routes.js",[],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\user\\Signup.js",[],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\user\\Signin.js",[],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Home.js",["158"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from './Layout'\r\nimport { getProducts } from './apiCore'\r\nimport Card from './Card'\r\nimport Search from './Search'\r\n\r\nconst Home = () => {\r\n\r\n    const [productsBySell, setProductsBySell] = useState([])\r\n    const [productsByArrival, setProductsByArrival] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    const loadProductsBySell = () => {\r\n        getProducts('sold').then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductsBySell(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadProductsByArrival = () => {\r\n        getProducts('createdAt').then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductsByArrival(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadProductsByArrival()\r\n        loadProductsBySell()\r\n    }, [])\r\n\r\n    return (\r\n        <Layout \r\n        title=\"Home page\" \r\n        description=\"Node React E-commerce App\"\r\n        className=\"container-fluid\"\r\n        >\r\n            <Search/>\r\n            <h2 className=\"mb-4\">New Arrivals</h2>\r\n            <div className =\"row\">\r\n            {productsByArrival.map((p, i) => (\r\n            <div key={i} className=\"col-4 mb-3\" >\r\n                <Card  product={p} />\r\n            </div>\r\n            ))}\r\n            </div>\r\n            \r\n            <h2 className=\"mb-4\">Best Sellers</h2>\r\n            <div className =\"row\">\r\n            {productsBySell.map((p, i) => (\r\n            <div key={i} className=\"col-4 mb-3\" >\r\n            <Card  product={p} />\r\n        </div>))}\r\n            </div>\r\n        </Layout>)\r\n}\r\n\r\nexport default Home;","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Menu.js",[],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Layout.js",[],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\config.js",[],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\auth\\index.js",[],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\auth\\PrivateRoute.js",["159"],"import React, {Component} from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport {isAuthenticated} from './index'\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => (\r\n\r\n    <Route {...rest} render={props => isAuthenticated() ? (\r\n        <Component {...props}/>\r\n    ) : (\r\n        <Redirect to={{pathname:\"/signin\", state:{from: props.location}}}></Redirect>\r\n    )}/>\r\n)\r\n\r\nexport default PrivateRoute;","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\user\\UserDashboard.js",["160"],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\auth\\AdminRoute.js",["161"],"import React, {Component} from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport {isAuthenticated} from './index'\r\n\r\nconst AdminRoute = ({component: Component, ...rest}) => (\r\n\r\n    <Route {...rest} render={props => isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n        <Component {...props}/>\r\n    ) : (\r\n        <Redirect to={{pathname:\"/signin\", state:{from: props.location}}}></Redirect>\r\n    )}/>\r\n)\r\n\r\nexport default AdminRoute;","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\user\\AdminDashboard.js",["162"],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\admin\\AddCategory.js",[],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\admin\\apiAdmin.js",[],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\admin\\AddProduct.js",["163","164","165","166","167"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from '../core/Layout'\r\nimport { isAuthenticated } from '../auth'\r\nimport { createProduct, getCategories } from './apiAdmin'\r\n\r\nconst AddProduct = () => {\r\n\r\n\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    })\r\n\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n\r\n    //load categories and set form data\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                setValues({ ...values, categories: data, formData: new FormData() })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, [])\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value\r\n        formData.set(name, value)\r\n        setValues({ ...values, [name]: value })\r\n\r\n    }\r\n\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        setValues({ error: '', loading: true, createdProduct : ''})\r\n\r\n        createProduct(user._id, token, formData)\r\n            .then(data => {\r\n                \r\n                if (data.error) {\r\n                    setValues({ ...values, error: data.error, createdProduct:'' })\r\n                } else {\r\n                    setValues({\r\n                        ...values,\r\n                        name: '',\r\n                        description: '',\r\n                        photo: '',\r\n                        price: '',\r\n                        quantity: '',\r\n                        loading: '',\r\n                        error: '',\r\n                        createdProduct: data.name\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-outline-secondary\">\r\n                    <input\r\n                        onChange={handleChange('photo')}\r\n                        type=\"file\"\r\n                        name=\"photo\"\r\n                        accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input\r\n                    onChange={handleChange('name')}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={name} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea\r\n                    onChange={handleChange('description')}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={description} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input\r\n                    onChange={handleChange('price')}\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={price} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select\r\n                    onChange={handleChange('category')}\r\n                    className=\"form-control\" >\r\n                    <option>Please select</option>\r\n\r\n                    {categories && categories.map((c, i) => (\r\n                        <option key={i} value={c._id}>{c.name}</option>\r\n                    ))}\r\n\r\n\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input\r\n                    onChange={handleChange('quantity')}\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={quantity} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select\r\n                    onChange={handleChange('shipping')}\r\n                    className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n\r\n                </select>\r\n            </div>\r\n            <button className=\"btn btn-outline-primary\">Create product</button>\r\n        </form>\r\n    )\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            <h2>{error}</h2>\r\n        </div>\r\n    )\r\n\r\n    const showSuccess = () => (createdProduct != '' ? <div className=\"alert alert-info\"> <h2>{`${createdProduct}`} has been created</h2>\r\n    </div> : '')\r\n\r\n    const showLoading = () => (\r\n        loading && (<div\r\n            className=\"alert alert-info\">\r\n            <h2>Loading...</h2>\r\n        </div>)\r\n    )\r\n\r\n    return (<Layout title=\"Add a new product\" description={`G'day ${user.name}!, ready to add a new product`} >\r\n        <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n                {showLoading()}\r\n                {showSuccess()}\r\n                {showError()}\r\n                {newPostForm()}\r\n\r\n            </div>\r\n\r\n        </div>\r\n      \r\n    </Layout>)\r\n}\r\n\r\nexport default AddProduct;\r\n","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\apiCore.js",[],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Card.js",["168"],"import React, { useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport ShowImage from './ShowImage'\r\nimport moment, { updateLocale } from 'moment'\r\nimport {addItem, updateItem, removeItem} from './cartHelpers'\r\n\r\nconst Card = ({ \r\n    product,\r\n    showViewProductButton= true, \r\n    showAddtoCartBtn=true,\r\n    cartUpdate = false,\r\n    showRemoveProductButton = false,\r\n    setRun = f => f,\r\n    run = undefined }) => {\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [count, setCount] = useState(product.count)\r\n\r\n    const showViewButton = showViewProductButton =>{\r\n        return(\r\n            showViewProductButton && (\r\n                <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n                <button className=\"btn btn-outline-primary mr-2 mt-2 mb-2\">\r\n                View product\r\n                 </button>\r\n                </Link>\r\n            )\r\n        )\r\n    }\r\n\r\n    const addToCart = () =>{\r\n        addItem(product, ()=>{\r\n            setRedirect(true)\r\n        })\r\n    }\r\n\r\n    const shouldRedirect = (redirect) =>{\r\n        if(redirect){\r\n            return <Redirect to=\"/cart\"/>\r\n        }\r\n    }\r\n    \r\n    const showAddToCardButton = showAddtoCartBtn=>(\r\n        showAddtoCartBtn && (<button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2\">\r\n        Add to cart\r\n    </button>)\r\n        \r\n    )\r\n\r\n    const showRemoveButton = showRemoveProductButton =>{\r\n      \r\n        return(\r\n        showRemoveProductButton && (\r\n        <button \r\n        onClick={()=>{\r\n            removeItem(product._id);\r\n            setRun(!run);\r\n        }}  \r\n        className=\"btn btn-outline-danger mt-2 mb-2\"\r\n        >\r\n        Remove product\r\n    </button>\r\n    )\r\n        \r\n    )}\r\n\r\n    const showStock = (quantity) =>{\r\n        return quantity > 0 ? \r\n        (<span className=\"badge badge-primary badge-pill\">In stock</span>) \r\n        : (<span className=\"badge badge-primary badge-pill\">Out of stock</span>)\r\n    }\r\n\r\n    const handleChange = productId => e=>{\r\n        setRun(!run)\r\n        setCount(e.target.value < 1? 1 : e.target.value)\r\n        if(e.target.value >= 1){\r\n            updateItem(productId, e.target.value)\r\n        }\r\n    }\r\n    const showCartUpdateOptions = (cartUpdate) =>{\r\n        return cartUpdate && <div>\r\n            <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">Adjust quantity</span>\r\n                </div>\r\n                <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)}/>\r\n            </div>\r\n        </div>\r\n    }\r\n    return (\r\n      \r\n            <div className=\"card\">\r\n                <div className=\"card-header name\">\r\n                    {product.name}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    {shouldRedirect(redirect)}\r\n                    <ShowImage item={product} url=\"product\" />\r\n                    <p className=\"lead mt-2\">{product.description.substring(0, 100)}</p>\r\n                    <p className=\"black-10\">${product.price}</p>\r\n                    <p className=\"black-9\">Category: {product.category && product.category.name}</p>\r\n                    <p className=\"black-8\">Added on: {moment(product.createdAt).fromNow()}</p>\r\n\r\n                        {showStock(product.quantity)}\r\n                        <br/>\r\n\r\n                        {showViewButton(showViewProductButton)}\r\n\r\n                        {showAddToCardButton(showAddtoCartBtn)}\r\n\r\n                        {showRemoveButton(showRemoveProductButton)}\r\n\r\n                        {showCartUpdateOptions(cartUpdate)}\r\n                </div>\r\n            </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Card;","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\ShowImage.js",[],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Shop.js",["169","170","171","172"],"import React, { useEffect, useState } from 'react'\r\nimport Layout from './Layout'\r\nimport Card from './Card'\r\nimport { getCategories, getFilteredProducts } from './apiCore'\r\nimport Checkbox from './Checkbox'\r\nimport RadioBox from './RadioBox'\r\nimport { prices } from './fixedPrices'\r\n\r\nconst Shop = () => {\r\n\r\n    const [myFilters, setMyFilters] = useState({\r\n        filters: { category: [], price: [] }\r\n    })\r\n    const [categories, setCategories] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [limit, setLimit] = useState(6)\r\n    const [skip, setSkip] = useState(0)    \r\n    const [size, setSize] = useState(0)\r\n    const [filteredResults, setfilteredResults] = useState([])\r\n\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setCategories(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadFilteredResults = (newFilters) => {\r\n        //console.log(newFilters);\r\n        getFilteredProducts(skip, limit, newFilters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setfilteredResults(data.data)\r\n                setSize(data.size)\r\n                setSkip(0)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadMore = () => {\r\n        let toSkip = skip + limit;\r\n        //console.log(newFilters);\r\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setfilteredResults ([...filteredResults, ...data.data])\r\n                setSize(data.size)\r\n                setSkip(toSkip)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadMoreButton = () =>{\r\n        return(\r\n            size > 0 && size >= limit &&(\r\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">Load more</button>\r\n            )\r\n        )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        init();\r\n        loadFilteredResults(skip, limit, myFilters.filters)\r\n    }, [])\r\n\r\n    const handleFilters = (filters, filterBy) => {\r\n        //console.log('shop', filters, filterBy);\r\n        const newFilters = { ...myFilters }\r\n        newFilters.filters[filterBy] = filters\r\n\r\n        if (filterBy == \"price\") {\r\n            let priceValues = handlePrice(filters)\r\n            newFilters.filters[filterBy] = priceValues\r\n        }\r\n\r\n        loadFilteredResults(myFilters.filters);\r\n\r\n        setMyFilters(newFilters)\r\n    }\r\n\r\n    const handlePrice = value => {\r\n        const data = prices;\r\n        let array = []\r\n        for (let key in data) {\r\n            if (data[key]._id === parseInt(value)) {\r\n                array = data[key].array\r\n            }\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shop page\"\r\n            description=\"Search and find books of your choise\"\r\n            className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <h4 className>Filter by categories</h4>\r\n                    <ul>\r\n                        <Checkbox\r\n                            categories={categories}\r\n                            handleFilters={filters => handleFilters(filters, 'category')} />\r\n                    </ul>\r\n\r\n                    <h4 className>Filter by range</h4>\r\n                    <div>\r\n                        <RadioBox\r\n                            prices={prices}\r\n                            handleFilters={filters => handleFilters(filters, 'price')} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-8\">\r\n                    <h2 className=\"mb-4\">Products</h2>\r\n                    <div className=\"row\">\r\n                        {filteredResults.map((p, i) => (\r\n                            <div key={i} className=\"col-4 mb-3\">\r\n                            <Card product={p} />\r\n                        </div>\r\n\r\n                           \r\n\r\n\r\n                        ))}\r\n                    </div>\r\n                    <hr/>\r\n                    {loadMoreButton()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Shop;","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Checkbox.js",["173"],"import React, {useState, useEffect} from 'react'\r\n\r\nconst Checkbox = ({categories, handleFilters})=>{\r\n\r\n    const [checked, setChecked] = useState([])\r\n\r\n    const handleToggle = c => () =>{\r\n        //return the first index or -1\r\n        const currentCategoryId = checked.indexOf(c)\r\n        console.log(\"currently\",currentCategoryId)\r\n        const newCheckedCategoryId = [...checked]\r\n\r\n        //if currently checked was not already in checked state > push, else pull/take off\r\n        if(currentCategoryId === -1){\r\n            newCheckedCategoryId.push(c)\r\n        }else{\r\n            //quitar la categoria\r\n            newCheckedCategoryId.splice(currentCategoryId,1)\r\n        }\r\n        setChecked(newCheckedCategoryId)\r\n        handleFilters(newCheckedCategoryId)\r\n        \r\n    }\r\n\r\n    return categories.map((c, i)=>(\r\n        <li key={i} className=\"list-unstyled\">\r\n            <input onChange={handleToggle(c._id)} value={checked.indexOf(c._id === -1)} type=\"checkbox\" className=\"form-check-input\"></input>\r\n            <label className=\"form-check-label\">{c.name}</label>\r\n        </li>\r\n    ))\r\n}\r\n\r\nexport default Checkbox;","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\fixedPrices.js",[],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\RadioBox.js",["174","175","176"],"import React, {useEffect, useState, Fragment} from 'react'\r\n\r\nconst RadioBox = ({prices, handleFilters}) =>{\r\n    const [value, setValue] = useState(0)\r\n\r\n\r\n    const handleChange = (event)=>{\r\n        handleFilters(event.target.value)\r\n        setValue(event.target.value)\r\n    }\r\n    return prices.map((p, i)=>(\r\n        <div key={i} >\r\n            <input \r\n            onChange={handleChange} \r\n            value={`${p._id}`} \r\n            type=\"radio\" \r\n            className=\"mr-2 ml-4\"\r\n            name=\"price\"></input>\r\n            <label className=\"form-check-label\">{p.name}</label>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default RadioBox;","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Search.js",["177","178"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from './Layout'\r\nimport { getProducts, getCategories, list } from './apiCore'\r\nimport Card from './Card'\r\n\r\nconst Search = () => {\r\n\r\n    const [data, setData] = useState({\r\n        categories: [],\r\n        category: '',\r\n        search: '',\r\n        results: [],\r\n        searched: false\r\n    })\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error)\r\n            } else {\r\n                setData({ ...data, categories: data })\r\n            }\r\n        })\r\n    }\r\n\r\n    const { categories, category, search, results, searched } = data;\r\n\r\n    const handleChange = name => e => {\r\n        setData({ ...data, [name]: e.target.value, searched: false })\r\n    }\r\n\r\n    const searchData = () => {\r\n        if (search) {\r\n            list({ search: search || undefined, category: category }).then(response => {\r\n                if (response.error) {\r\n                    console.log(response.error)\r\n                } else {\r\n                    setData({ ...data, results: response, searched: true })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const searchSubmit = (e) => {\r\n        e.preventDefault();\r\n        searchData();\r\n    }\r\n\r\n    const searchMessage = (searched, results) =>{\r\n        if(searched && results.length >0){\r\n            return `Found ${results.length} products`\r\n        }\r\n        if(searched && results.length <1){\r\n            return `Not products found`\r\n        }\r\n    }\r\n\r\n    const searchedProducts = (results = []) => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mt-4 mb-4\">\r\n                    {searchMessage(searched, results)}\r\n                </h2>\r\n                <div className=\"row\">\r\n                    {results.map((p, i) => (\r\n                        <div className=\"col-4 mb-3\"  key={i} >\r\n                             <Card product={p} />\r\n                        </div>\r\n                       \r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const searchForm = () => (\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select\r\n                            className=\"btn mr-2\"\r\n                            onChange={handleChange(\"category\")}>\r\n                            <option value=\"All\">Pick category</option>\r\n                            {categories.map((c, i) => (\r\n                                <option key={i} value={c._id}>{c.name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"search\")}\r\n                        placeholder=\"Search by name\" />\r\n                </div>\r\n                <div className=\"btn input-group-append\" style={{ border: 'none' }}>\r\n                    <button className=\"input-group-text\">Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    );\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        loadCategories()\r\n    }, []\r\n    )\r\n    return (\r\n        <div>\r\n            <div className=\"container mb-3\">{searchForm()}\r\n                <div className=\"container-fluid mb-3\">\r\n                    {searchedProducts(results)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Product.js",["179"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from './Layout'\r\nimport { read, listRelated } from './apiCore'\r\nimport Card from './Card'\r\n\r\n\r\nconst Product = (props) => {\r\n\r\n    const [product, setProduct] = useState({});\r\n    const [error, setError] = useState(false);\r\n    const [relatedProduct, setRelatedProduct] = useState([]);\r\n\r\n    const loadSingleProduct = productId => {\r\n        read(productId).then(data => {\r\n            if (data.error) {\r\n                console.log(error)\r\n            } else {\r\n                setProduct(data)\r\n                //fetch related products\r\n                listRelated(data._id).then(data => {\r\n                    if (data.error) {\r\n                        setError(data.error)\r\n                    } else {\r\n                        setRelatedProduct(data)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        //grap productId from url\r\n        const productId = props.match.params.productId;\r\n        loadSingleProduct(productId);\r\n    }, [props])\r\n\r\n    return (\r\n        <Layout\r\n            title={product && product.name}\r\n            description={\r\n                product &&\r\n                product.description &&\r\n                product.description.substring(0, 100)}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-8\">\r\n                    {product &&\r\n                    product.description && \r\n                    <Card key={product._id} product={product} showViewProductButton={false}/>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"col-4\">\r\n                    <h4>Related products</h4>\r\n                    {relatedProduct.map((p, i) => (\r\n                        <div className=\"mb-3\" key={i}>\r\n                            <Card product={p} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                \r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Product;","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\cartHelpers.js",["180","181"],"export const addItem = (item, next)=>{\r\n    let cart = [];\r\n    \r\n    if(typeof window !== 'undefined'){\r\n        if(localStorage.getItem('cart')){\r\n            //json.parse() convert json to object, json.stringify() convert object to json\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n        }\r\n\r\n        cart.push({\r\n            ...item, \r\n            count: 1\r\n        })\r\n\r\n        //creamos un arreglo del arreglo original, hacemos un set mapeando los productos y eliminando los duplicados\r\n        cart = Array.from(new Set(cart.map((p)=>(p._id)))).map(id=>{\r\n            return cart.find(p=>p._id === id)\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart))\r\n        next()\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const itemTotal = () =>{\r\n    if(typeof window !== 'undefined'){\r\n        if(localStorage.getItem('cart')){\r\n            return JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport const getCart = () =>{\r\n    if(typeof window !== 'undefined'){\r\n        if(localStorage.getItem('cart')){\r\n            return JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n    }\r\n    return [];\r\n}\r\n\r\n\r\nexport const updateItem = (productId, count) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart[i].count = count;\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const removeItem = productId => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart.splice(i, 1);\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n    return cart;\r\n};\r\n\r\n\r\nexport const emptyCart = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('cart');\r\n        next();\r\n    }\r\n};\r\n\r\n","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Cart.js",["182","183"],"import React, { useState, useEffect } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Layout from './Layout'\r\nimport { getCart, removeItem } from './cartHelpers'\r\nimport Card from './Card'\r\nimport Search from './Search'\r\nimport Checkout from './Checkout'\r\n\r\nconst Cart = () =>{\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [run, setRun] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        setItems(getCart())\r\n    }, [run])\r\n\r\n    const showItems = items =>{\r\n        return(\r\n            <div>\r\n                <h2>Your cart has {`${items.length}`} items</h2>\r\n                <hr/>\r\n                {items.map((product, i)=>(\r\n                    <Card \r\n                        key={i} \r\n                        product={product} \r\n                        showAddtoCartBtn={false}\r\n                        cartUpdate={true}\r\n                        showRemoveProductButton={true}\r\n                        setRun={setRun}\r\n                        run={run}\r\n                        />))}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const noItemsMessage = () =>(\r\n        <h2>Your cart is empty. <br/><Link to=\"/shop\">Continue shopping</Link></h2>\r\n    )\r\n\r\n\r\n    return(\r\n        <Layout \r\n        title=\"Shopping cart\" \r\n        description=\"Manage your cart items. Add, remove, checkout or continue shopping\"\r\n        className=\"container-fluid\"\r\n        >\r\n           <div className=\"row\">\r\n               <div className=\"col-6\">\r\n                    {items.length > 0 ? showItems(items) : noItemsMessage()}\r\n               </div>\r\n\r\n               <div className=\"col-6\">\r\n                    <h2 className=\"mb-4\">Your cart summary</h2>\r\n                    <hr/>\r\n                    <Checkout products={items} setRun={setRun} run={run}/>\r\n\r\n               </div>\r\n           </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Cart;","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\core\\Checkout.js",["184","185","186"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getBraintreeClientToken, processPayment, createOrder } from './apiCore'\r\nimport { emptyCart } from './cartHelpers'\r\nimport Card from './Card'\r\nimport { isAuthenticated } from '../auth'\r\nimport DropIn from 'braintree-web-drop-in-react'\r\n\r\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\r\n\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: '',\r\n        instance: {},\r\n        address: ''\r\n    })\r\n\r\n\r\n\r\n    const userId = isAuthenticated() && isAuthenticated().user._id;\r\n    const token = isAuthenticated() && isAuthenticated().token;\r\n\r\n    const getToken = (userId, token) => {\r\n        getBraintreeClientToken(userId, token).then(data => {\r\n            if (data.error) {\r\n\r\n                setData({ ...data, error: data.error })\r\n            } else {\r\n\r\n                setData({ clientToken: data.clientToken })\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getToken(userId, token)\r\n    }, [])\r\n\r\n    const getTotal = () => {\r\n        //currentValues is the acumulator\r\n        //each item is nextValue to add\r\n        return products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        }, 0)\r\n    }\r\n\r\n    const showCheckout = () => {\r\n        return (\r\n            isAuthenticated() ? (\r\n                <div>{showDropIn()}</div>\r\n            ) : (\r\n                    <Link to=\"/signin\">\r\n                        <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n                    </Link>)\r\n\r\n        )\r\n    }\r\n\r\n    const handleAddress = event => {\r\n        setData({ ...data, address: event.target.value });\r\n    };\r\n\r\n    const deliveryAddress = data.address;\r\n\r\n    const buy = () => {\r\n        setData({ loading: true })\r\n        //send nonce to your server, nonce=data.instance.requestPaymentMethod\r\n        let nonce;\r\n        let getNonce = data.instance\r\n            .requestPaymentMethod()\r\n            .then(data => {\r\n                // console.log(data)\r\n                // nonce = data.nonce\r\n                // //once you have nonce(card type, card number) send nonce as 'paymentMethodNonce'\r\n                // console.log('send noce and total to process: ', nonce, getTotal(products))\r\n                nonce = data.nonce;\r\n\r\n                const paymentData = {\r\n                    paymentMethodNonce: nonce,\r\n                    amount: getTotal(products)\r\n                }\r\n\r\n                processPayment(userId, token, paymentData)\r\n                    .then(response => {\r\n                        //console.log(response)\r\n\r\n                        const createOrderData = {\r\n                            products: products,\r\n                            transaction_id: response.transaction.id,\r\n                            amount: response.transaction.amount,\r\n                            address: deliveryAddress\r\n                        }\r\n                        createOrder(userId, token, createOrderData)\r\n                        .then(response=>{\r\n                            emptyCart(() => {\r\n                                setRun(!run);\r\n                                console.log('payment success and empty cart')\r\n                               \r\n                            })\r\n\r\n                            setData({ ...data, success: true })\r\n                        }).catch(error=>{\r\n                            console.log(error)\r\n                        })\r\n\r\n                       \r\n                      \r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                        setData({ loading: false })\r\n                    })\r\n            })\r\n            .catch(error => {\r\n                console.log('dropping error: ', error)\r\n                setData({ ...data, error: error.message })\r\n            })\r\n\r\n    }\r\n\r\n    //unBlur is when whatever there's a click on the page this will run\r\n    /**\r\n     * paypal:{flow:'vault'}\r\n     */\r\n    const showDropIn = () => (\r\n        <div onBlur={() => setData({ ...data, error: '' })}>\r\n            {data.clientToken !== null && products.length > 0 ? (\r\n                <div>\r\n\r\n                    <div className=\"gorm-group mb-3\">\r\n                        <label className=\"text-muted\">Delivery address:</label>\r\n                        <textarea\r\n                            onChange={handleAddress}\r\n                            className=\"form-control\"\r\n                            value={data.address}\r\n                            placeholder=\"Type your delivery address here...\"\r\n                        />\r\n                    </div>\r\n\r\n                    <DropIn\r\n                        options={{\r\n                            authorization: data.clientToken,\r\n                            paypal: {\r\n                                flow: 'vault'\r\n                            }\r\n\r\n                        }}\r\n                        onInstance={instance => (data.instance = instance)}\r\n                    />\r\n                    <button onClick={buy} className=\"btn btn-success btn-block\">Pay</button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n\r\n    const showError = error => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n            {data.error}\r\n        </div>\r\n    )\r\n\r\n    const showSuccess = success => (\r\n        <div\r\n            className=\"alert alert-info\"\r\n            style={{ display: success ? \"\" : \"none\" }}\r\n        >\r\n            Thanks! Your payment was successful\r\n        </div>\r\n    )\r\n\r\n    const showLoading = loading => (\r\n        loading && <h2>Loading...</h2>\r\n    )\r\n\r\n\r\n    return (<div>\r\n        <h2>Total: ${getTotal()}</h2>\r\n        {showLoading(data.loading)}\r\n        {showSuccess(data.success)}\r\n        {showError(data.error)}\r\n        {showCheckout()}\r\n    </div>)\r\n\r\n}\r\n\r\nexport default Checkout;","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\admin\\Orders.js",["187","188"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from '../core/Layout'\r\nimport { isAuthenticated } from '../auth'\r\nimport {Link} from 'react-router-dom'\r\nimport {listOrders, getStatusValues, updateOrderStatus } from './apiAdmin'\r\nimport moment from 'moment'\r\n\r\nconst Orders = () =>{\r\n\r\n    const [orders, setOrders] = useState([])\r\n    const [statusValues, setStatusValues] = useState([])\r\n\r\n    const {user, token} = isAuthenticated();\r\n\r\n    const loadOrders = () =>{\r\n        listOrders(user._id, token).then(data=>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }else{\r\n                setOrders(data.orders)\r\n            }\r\n        })\r\n    }\r\n\r\n    const loadStatusValues = () =>{\r\n        getStatusValues(user._id, token).then(data=>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }else{\r\n                setStatusValues(data)\r\n            }\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        loadOrders();\r\n        loadStatusValues();\r\n    }, [])\r\n\r\n    const showOrdersLength = () => {\r\n        \r\n        if (orders.length > 0) {\r\n            return (\r\n                <h1 className=\"text-danger display-2\">\r\n                    Total orders: {orders.length}\r\n                </h1>\r\n            );\r\n        } else {\r\n            return <h1 className=\"text-danger\">No orders</h1>;\r\n        }\r\n    };\r\n\r\n    const showInput = (key, value) =>(\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">{key}</div>                \r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly/>\r\n        </div>\r\n    )\r\n\r\n    const handleStatusChange = (e, orderId)=>{\r\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(\r\n            (data)=>{\r\n                if(data.error){\r\n                    console.log('Status data failed')\r\n                }else{\r\n                    loadOrders()\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const showStatus = (order)=>(\r\n         <div className=\"form-group\">\r\n             <h3 className=\"mark mb-4\">Status: {order.status}</h3>\r\n             <select className=\"form-control\" onChange={(e)=>{\r\n                 handleStatusChange(e,order._id)\r\n             }}>\r\n                 <option >Update Status</option>\r\n                 {statusValues.map((s, i)=>(\r\n                     <option key={i} values={s}>{s}</option>\r\n                 ))}\r\n             </select>\r\n         </div>\r\n    )\r\n\r\n    return (\r\n        <Layout title=\"Orders\" description={`G'day ${user.name}!, you can manage all the orders here`} >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showOrdersLength()}\r\n                    {orders.map((o, oIndex)=>(\r\n                        <div\r\n                            className=\"mt-5\"\r\n                            key={oIndex}\r\n                            style={{borderBottom: '5px solid indigo'}}\r\n                        >\r\n                           <h2 className=\"mb-5\">\r\n                                <span className=\"bg-primary\">\r\n                                    Order ID: {o._id}\r\n                                </span>   \r\n                            </h2> \r\n                            <ul className=\"list-group mb-2\">\r\n                                <li className=\"list-group-item\">\r\n                                    {showStatus(o)}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    Transaction ID: {o.transaction_id}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    Amount: ${o.amount}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    Ordered by: {o.user.name}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    Ordered on: {moment(o.createdAt).fromNow()}\r\n                                </li>\r\n                                <li className=\"list-group-item\">\r\n                                    Delivery address: {o.address}\r\n                                </li>\r\n                            </ul>\r\n                            <h3 className=\"mt4 mb-4 font-italic\">\r\n                                Total products in the order: {o.products.length}\r\n                            </h3>\r\n                            {o.products.map((p, pIndex)=>(\r\n                                <div \r\n                                className=\"mb-4\"\r\n                                key={pIndex}\r\n                                sytle={{padding:'20x', border: '1px solid indigo'}}>\r\n                                    {showInput('Product name', p.name)}\r\n                                    {showInput('Product price', p.price)}\r\n                                    {showInput('Product total', p.count)}\r\n                                    {showInput('Product Id', p._id)}\r\n\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                   \r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default Orders;","C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\user\\Profile.js",["189","190","191"],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\user\\apiUser.js",["192"],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\admin\\ManageProducts.js",[],"C:\\Users\\Evese\\OneDrive\\Documentos\\UdemyNodeCourse\\ecommclient\\ecommerce-front\\src\\admin\\UpdateProduct.js",["193","194","195"],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"196","replacedBy":"200"},{"ruleId":"198","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":11,"column":12,"nodeType":"204","messageId":"205","endLine":11,"endColumn":17},{"ruleId":"202","severity":1,"message":"206","line":1,"column":16,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"208","line":25,"column":8,"nodeType":"209","endLine":25,"endColumn":10,"suggestions":"210"},{"ruleId":"202","severity":1,"message":"206","line":1,"column":16,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"211","line":8,"column":21,"nodeType":"204","messageId":"205","endLine":8,"endColumn":24},{"ruleId":"202","severity":1,"message":"212","line":30,"column":9,"nodeType":"204","messageId":"205","endLine":30,"endColumn":17},{"ruleId":"202","severity":1,"message":"213","line":31,"column":9,"nodeType":"204","messageId":"205","endLine":31,"endColumn":17},{"ruleId":"202","severity":1,"message":"214","line":36,"column":9,"nodeType":"204","messageId":"205","endLine":36,"endColumn":26},{"ruleId":"207","severity":1,"message":"215","line":56,"column":8,"nodeType":"209","endLine":56,"endColumn":10,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":173,"column":47,"nodeType":"219","messageId":"220","endLine":173,"endColumn":49},{"ruleId":"202","severity":1,"message":"221","line":4,"column":18,"nodeType":"204","messageId":"205","endLine":4,"endColumn":30},{"ruleId":"202","severity":1,"message":"203","line":15,"column":12,"nodeType":"204","messageId":"205","endLine":15,"endColumn":17},{"ruleId":"202","severity":1,"message":"222","line":16,"column":19,"nodeType":"204","messageId":"205","endLine":16,"endColumn":27},{"ruleId":"207","severity":1,"message":"223","line":70,"column":8,"nodeType":"209","endLine":70,"endColumn":10,"suggestions":"224"},{"ruleId":"217","severity":1,"message":"225","line":77,"column":22,"nodeType":"219","messageId":"220","endLine":77,"endColumn":24},{"ruleId":"202","severity":1,"message":"226","line":1,"column":26,"nodeType":"204","messageId":"205","endLine":1,"endColumn":35},{"ruleId":"202","severity":1,"message":"226","line":1,"column":16,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"227","line":1,"column":37,"nodeType":"204","messageId":"205","endLine":1,"endColumn":45},{"ruleId":"202","severity":1,"message":"228","line":4,"column":12,"nodeType":"204","messageId":"205","endLine":4,"endColumn":17},{"ruleId":"202","severity":1,"message":"229","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":14},{"ruleId":"202","severity":1,"message":"230","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":21},{"ruleId":"207","severity":1,"message":"231","line":37,"column":8,"nodeType":"209","endLine":37,"endColumn":15,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":53,"column":31,"nodeType":"235","messageId":"236","endLine":53,"endColumn":33},{"ruleId":"233","severity":1,"message":"234","line":72,"column":31,"nodeType":"235","messageId":"236","endLine":72,"endColumn":33},{"ruleId":"202","severity":1,"message":"237","line":4,"column":19,"nodeType":"204","messageId":"205","endLine":4,"endColumn":29},{"ruleId":"202","severity":1,"message":"238","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":14},{"ruleId":"202","severity":1,"message":"239","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":12},{"ruleId":"207","severity":1,"message":"240","line":41,"column":8,"nodeType":"209","endLine":41,"endColumn":10,"suggestions":"241"},{"ruleId":"202","severity":1,"message":"242","line":73,"column":13,"nodeType":"204","messageId":"205","endLine":73,"endColumn":21},{"ruleId":"202","severity":1,"message":"243","line":4,"column":9,"nodeType":"204","messageId":"205","endLine":4,"endColumn":13},{"ruleId":"207","severity":1,"message":"244","line":37,"column":8,"nodeType":"209","endLine":37,"endColumn":10,"suggestions":"245"},{"ruleId":"202","severity":1,"message":"243","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":17,"column":35,"nodeType":"204","messageId":"205","endLine":17,"endColumn":40},{"ruleId":"207","severity":1,"message":"246","line":31,"column":7,"nodeType":"209","endLine":31,"endColumn":9,"suggestions":"247"},{"ruleId":"202","severity":1,"message":"248","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"212","line":32,"column":9,"nodeType":"204","messageId":"205","endLine":32,"endColumn":17},{"ruleId":"202","severity":1,"message":"213","line":33,"column":9,"nodeType":"204","messageId":"205","endLine":33,"endColumn":17},{"ruleId":"207","severity":1,"message":"249","line":81,"column":8,"nodeType":"209","endLine":81,"endColumn":10,"suggestions":"250"},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],["251"],["252"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'Component' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_id' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["253"],"'_id' is assigned a value but never used.","'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["254"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'updateLocale' is defined but never used.","'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["255"],"Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'Fragment' is defined but never used.","'value' is assigned a value but never used.","'Layout' is defined but never used.","'getProducts' is defined but never used.","React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["256"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'removeItem' is defined but never used.","'Search' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["257"],"'getNonce' is assigned a value but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValues'. Either include them or remove the dependency array.",["258"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.userId'. Either include them or remove the dependency array.",["259"],"'queryString' is defined but never used.","React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["260"],"no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [_id, token]",{"range":"277","text":"278"},"Update the dependencies array to be: [init]",{"range":"279","text":"280"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"281","text":"282"},"Update the dependencies array to be: [loadSingleProduct, props]",{"range":"283","text":"284"},"Update the dependencies array to be: [token, userId]",{"range":"285","text":"286"},"Update the dependencies array to be: [loadOrders, loadStatusValues]",{"range":"287","text":"288"},"Update the dependencies array to be: [init, match.params.userId]",{"range":"289","text":"290"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"291","text":"292"},[724,726],"[_id, token]",[1299,1301],"[init]",[2119,2121],"[limit, loadFilteredResults, myFilters.filters, skip]",[1068,1075],"[loadSingleProduct, props]",[1129,1131],"[token, userId]",[1039,1041],"[loadOrders, loadStatusValues]",[879,881],"[init, match.params.userId]",[2103,2105],"[init, match.params.productId]"]